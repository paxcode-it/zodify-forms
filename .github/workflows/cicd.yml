name: CI/CD

on:
  push:
    paths:
      - 'packages/**'
    branches:
      - main
      - beta
      - next
      - experimental
      - dev
  pull_request:
    paths:
      - 'packages/**'

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: pnpm
          cache-dependency-path: './pnpm-lock.yaml'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run lint:lib
      - run: pnpm run test:lib

  CD:
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' }}
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvm
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'
          cache: pnpm
          cache-dependency-path: './pnpm-lock.yaml'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run build:lib
      - name: Release lib to NPM Registry and GitHub Packages
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: pnpm run deploy:lib
